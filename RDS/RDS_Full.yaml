AWSTemplateFormatVersion: "2010-09-09"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Database Configuration"
        Parameters:
          - DBName
          - DBUsername
          - DBPassword
          - DBInstanceClass
          - DBStorageSize
          - MultiAZ
          - DBBackupRetentionPeriod
          - VpcId
          - SubnetIds
          - DBPubliclyAccessible
          - DBStorageEncrypted
          - DBDeletionProtection
          
Parameters:
  DBName:
    Type: String
    Description: Name of the database to create
  DBUsername:
    Type: String
    Description: Username for the database
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: Must contain only alphanumeric characters
    Description: Password for MySQL database access
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DBInstanceClass:
    Type: String
    Description: RDS instance type for the database
    Default: db.t3.micro
    AllowedValues:
      ["db.m1.large", "db.m1.medium", "db.m1.small", "db.m1.xlarge", "db.m2.2xlarge", "db.m2.4xlarge", "db.m2.xlarge", "db.m3.2xlarge", "db.m3.large", "db.m3.medium", "db.m3.xlarge", "db.m4.10xlarge", "db.m4.16xlarge", "db.m4.2xlarge", "db.m4.4xlarge", "db.m4.large", "db.m4.xlarge", "db.m5.12xlarge", "db.m5.16xlarge", "db.m5.24xlarge", "db.m5.2xlarge", "db.m5.4xlarge", "db.m5.8xlarge", "db.m5.large", "db.m5.xlarge", "db.m5d.12xlarge", "db.m5d.16xlarge", "db.m5d.24xlarge", "db.m5d.2xlarge", "db.m5d.4xlarge", "db.m5d.8xlarge", "db.m5d.large", "db.m5d.xlarge", "db.m6g.12xlarge", "db.m6g.16xlarge", "db.m6g.2xlarge", "db.m6g.4xlarge", "db.m6g.8xlarge", "db.m6g.large", "db.m6g.xlarge", "db.m6gd.12xlarge", "db.m6gd.16xlarge", "db.m6gd.2xlarge", "db.m6gd.4xlarge", "db.m6gd.8xlarge", "db.m6gd.large", "db.m6gd.xlarge", "db.m6i.12xlarge", "db.m6i.16xlarge", "db.m6i.24xlarge", "db.m6i.2xlarge", "db.m6i.32xlarge", "db.m6i.4xlarge", "db.m6i.8xlarge", "db.m6i.large", "db.m6i.xlarge", "db.m7g.12xlarge", "db.m7g.16xlarge", "db.m7g.2xlarge", "db.m7g.4xlarge", "db.m7g.8xlarge", "db.m7g.large", "db.m7g.xlarge", "db.r3.2xlarge", "db.r3.4xlarge", "db.r3.8xlarge", "db.r3.large", "db.r3.xlarge", "db.r4.16xlarge", "db.r4.2xlarge", "db.r4.4xlarge", "db.r4.8xlarge", "db.r4.large", "db.r4.xlarge", "db.r5.12xlarge", "db.r5.12xlarge.tpc2.mem2x", "db.r5.16xlarge", "db.r5.24xlarge", "db.r5.2xlarge", "db.r5.2xlarge.tpc1.mem2x", "db.r5.2xlarge.tpc2.mem4x", "db.r5.2xlarge.tpc2.mem8x", "db.r5.4xlarge", "db.r5.4xlarge.tpc2.mem2x", "db.r5.4xlarge.tpc2.mem3x", "db.r5.4xlarge.tpc2.mem4x", "db.r5.6xlarge.tpc2.mem4x", "db.r5.8xlarge", "db.r5.8xlarge.tpc2.mem3x", "db.r5.large", "db.r5.large.tpc1.mem2x", "db.r5.xlarge", "db.r5.xlarge.tpc2.mem2x", "db.r5.xlarge.tpc2.mem4x", "db.r5b.12xlarge", "db.r5b.12xlarge.tpc2.mem2x", "db.r5b.16xlarge", "db.r5b.24xlarge", "db.r5b.2xlarge", "db.r5b.2xlarge.tpc1.mem2x", "db.r5b.2xlarge.tpc2.mem4x", "db.r5b.2xlarge.tpc2.mem8x", "db.r5b.4xlarge", "db.r5b.4xlarge.tpc2.mem2x", "db.r5b.4xlarge.tpc2.mem3x", "db.r5b.4xlarge.tpc2.mem4x", "db.r5b.6xlarge.tpc2.mem4x", "db.r5b.8xlarge", "db.r5b.8xlarge.tpc2.mem3x", "db.r5b.large", "db.r5b.large.tpc1.mem2x", "db.r5b.xlarge", "db.r5b.xlarge.tpc2.mem2x", "db.r5b.xlarge.tpc2.mem4x", "db.r5d.12xlarge", "db.r5d.16xlarge", "db.r5d.24xlarge", "db.r5d.2xlarge", "db.r5d.4xlarge", "db.r5d.8xlarge", "db.r5d.large", "db.r5d.xlarge", "db.r6g.12xlarge", "db.r6g.16xlarge", "db.r6g.2xlarge", "db.r6g.4xlarge", "db.r6g.8xlarge", "db.r6g.large", "db.r6g.xlarge", "db.r6gd.12xlarge", "db.r6gd.16xlarge", "db.r6gd.2xlarge", "db.r6gd.4xlarge", "db.r6gd.8xlarge", "db.r6gd.large", "db.r6gd.xlarge", "db.r6i.12xlarge", "db.r6i.16xlarge", "db.r6i.24xlarge", "db.r6i.2xlarge", "db.r6i.32xlarge", "db.r6i.4xlarge", "db.r6i.8xlarge", "db.r6i.large", "db.r6i.xlarge", "db.r7g.12xlarge", "db.r7g.16xlarge", "db.r7g.2xlarge", "db.r7g.4xlarge", "db.r7g.8xlarge", "db.r7g.large", "db.r7g.xlarge", "db.serverless", "db.t1.micro", "db.t2.2xlarge", "db.t2.large", "db.t2.medium", "db.t2.micro", "db.t2.small", "db.t2.xlarge", "db.t3.2xlarge", "db.t3.large", "db.t3.medium", "db.t3.micro", "db.t3.small", "db.t3.xlarge", "db.t4g.2xlarge", "db.t4g.large", "db.t4g.medium", "db.t4g.micro", "db.t4g.small", "db.t4g.xlarge", "db.x1.16xlarge", "db.x1.32xlarge", "db.x1e.16xlarge", "db.x1e.2xlarge", "db.x1e.32xlarge", "db.x1e.4xlarge", "db.x1e.8xlarge", "db.x1e.xlarge", "db.x2g.12xlarge", "db.x2g.16xlarge", "db.x2g.2xlarge", "db.x2g.4xlarge", "db.x2g.8xlarge", "db.x2g.large", "db.x2g.xlarge", "db.x2idn.16xlarge", "db.x2idn.24xlarge", "db.x2idn.32xlarge", "db.x2iedn.16xlarge", "db.x2iedn.24xlarge", "db.x2iedn.2xlarge", "db.x2iedn.32xlarge", "db.x2iedn.4xlarge", "db.x2iedn.8xlarge", "db.x2iedn.xlarge", "db.x2iezn.12xlarge", "db.x2iezn.2xlarge", "db.x2iezn.4xlarge", "db.x2iezn.6xlarge", "db.x2iezn.8xlarge", "db.z1d.12xlarge", "db.z1d.2xlarge", "db.z1d.3xlarge", "db.z1d.6xlarge", "db.z1d.large", "db.z1d.xlarge"]
  DBStorageSize:
    Type: Number
    Description: Allocated storage size for the database (in GB)
    Default: 10
    MinValue: 5
    MaxValue: 65536
  MultiAZ:
    Type: String
    Description: Enable multi-AZ deployment (true/false)
    Default: true
    AllowedValues:
      - true
      - false
  DBBackupRetentionPeriod:
    Type: Number
    ConstraintDescription: Database backup retention period must be between 0 and 35 days
    Default: 7
    Description: Give the number of days for which automatic Database snapshots are retained for bacckup
    MaxValue: 35
    MinValue: 0
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC in which to create the database
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs in the VPC for the database
  CreateReadReplica:
    Type: String
    Description: Specifies whether to create a read replica or not
    Default: "false"
    AllowedValues: ["true", "false"]
  RRBackupRetentionPeriod:
    Type: Number
    ConstraintDescription: Database backup retention period must be between 0 and 35 days
    Default: 7
    Description: Give the number of days for which automatic Database snapshots are retained for bacckup
    MaxValue: 35
    MinValue: 0
  DBPubliclyAccessible:
    Type: String
    Description: For PubliclyAccessible (true/false)
    Default: false
    AllowedValues:
      - true
      - false
  DBStorageEncrypted:
    Type: String
    Description: For Storage Encrypted (true/false)
    Default: false
    AllowedValues:
      - true
      - false
  DBDeletionProtection:
    Type: String
    Description: For Deletion Protection (true/false)
    Default: false
    AllowedValues:
      - true
      - false


Resources:
  DBInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      Engine: mysql
      DBInstanceIdentifier: !Ref DBName
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBStorageSize
      EngineVersion: "8.0.32"
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      MultiAZ: !Ref MultiAZ
      PubliclyAccessible: !Ref DBPubliclyAccessible
      StorageEncrypted: !Ref DBStorageEncrypted
      DeletionProtection: !Ref DBDeletionProtection 
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
  
  ReadReplicaInstance:
    Condition: CreateReadReplicaCondition
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      DBInstanceIdentifier: !Sub "${DBName}-ReadReplica"
      DBInstanceClass: !Ref DBInstanceClass
      SourceDBInstanceIdentifier: !Ref DBInstance
      BackupRetentionPeriod: !Ref RRBackupRetentionPeriod

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the RDS database
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${AWS::StackName}-SubnetGroup
      DBSubnetGroupDescription: !Sub Subnet group for ${AWS::StackName}
      SubnetIds: !Ref SubnetIds

  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${AWS::StackName}-DBPassword"
      Description: !Sub "Database password for ${AWS::StackName}"
      SecretString: !Ref DBPassword
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain

Conditions:
  CreateReadReplicaCondition: !Equals [!Ref CreateReadReplica, "true"]

Outputs:
  RDSInstanceIdentifier:
    Description: The identifier of the RDS instance
    Value: !Ref DBName
  RDSInstanceEndpoint:
    Description: The endpoint of the RDS instance
    Value: !GetAtt DBInstance.Endpoint.Address
  DBReadReplicaEndpoint:
    Condition: CreateReadReplicaCondition
    Description: Endpoint URL of the read replica
    Value: !If [CreateReadReplicaCondition, !GetAtt ReadReplicaInstance.Endpoint.Address, !Ref "AWS::NoValue"]
