{
  "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Task VPC"
          }
        ]
      }
    },
    "MyInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Task IG"
          }
        ]
      }
    },
    "MyInternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyVPC"
        },
        "InternetGatewayId": {
          "Ref": "MyInternetGateway"
        }
      }
    },
    "MyRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Task RT"
          }
        ]
      }
    },
    "MyRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "MyInternetGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "MyRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyInternetGateway"
        }
      }
    },
    "MySubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "MySubnet"
        },
        "RouteTableId": {
          "Ref": "MyRouteTable"
        }
      }
    },

    "MySubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "MyVPC"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "Task Subnet"
          }
        ]
      }
    },


    "MySecurityGroup1": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "SG1",
        "GroupDescription": "Allow incoming traffic on ports 22 (SSH) and 80 (HTTP)",
        "VpcId": {
          "Ref": "MyVPC"
        },
        "SecurityGroupIngress": [

          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },          {
            "IpProtocol": "tcp",
            "FromPort": 3001,
            "ToPort": 3001,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 3001,
            "ToPort": 3001,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ]

      }
    },
    "MySecurityGroup2": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "SG2",
        "GroupDescription": "Allow incoming ICMP,SSH and HTTP traffic",
        "VpcId": {
          "Ref": "MyVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": -1,
            "ToPort": -1,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "icmp",
            "FromPort": -1,
            "ToPort": -1,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },

    "MyInstance1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "ImageId": "ami-0dfcb1ef8550277af",
        "KeyName": "my one key",
        "SubnetId": {
          "Ref": "MySubnet"
        },
        "SecurityGroupIds": [
          {
            "Ref": "MySecurityGroup1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "My Instance 1"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Sub": "#!/bin/bash\nsudo su\nyum update -y\nyum install -y httpd\nsystemctl start httpd\nsystemctl enable httpd\ncd /var/www/html\ncurl -sL https://rpm.nodesource.com/setup_14.x | sudo bash -\nyum install -y nodejs\nnpx create-react-app myapp\ncd myapp\nPORT=3001 npm start\n"
          }
        }
      }
    },
    "MyInstance2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "ImageId": "ami-0557a15b87f6559cf",
        "KeyName": "my one key",
        "SubnetId": {
          "Ref": "MySubnet"
        },
        "SecurityGroupIds": [
          {
            "Ref": "MySecurityGroup2"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "My Instance 2"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
              "#!/bin/bash\n",
              "sudo apt-get update\n",
              "sudo apt-get install -y apache2\n",
              "echo '<html><body><h1>Hello World</h1></body></html>,' | sudo tee /var/www/html/index.html\n",
              "sudo service apache2 start\n"
              ]
            ]
          }
        }
      }
    }
  }
}